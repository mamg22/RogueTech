behavior SubmitFix(value)
    on mouseover or click
        set the value of #pagefix to value
    end
end

behavior DisableOnSubmit(table)
    on submit or htmx:validation:validate
        -- Async, because sync breaks form submission
        async do
            add .shine to table
            add @disabled to <fieldset, .pagination button/>
            wait for htmx:afterRequest
            remove @disabled from <fieldset:not([data-disabled]), .pagination button:not([data-disabled])/>
            settle
            remove .shine from table
        end
    end
    on htmx:historyRestore from window
        or popstate from window
        or htmx:beforeHistorySave from window
        remove @disabled from <fieldset:not([data-disabled]), .pagination button:not([data-disabled])/>
    end
end

behavior Notification
    init
        wait 7s
        transition my *opacity to 0.0 over 3s
        remove me
    end
    on click
        remove me
    end
end

behavior Help
    init
        set element help_text to the innerHTML of first .help-text in me
    end
    on click
        alert(help_text)
    end
end

def notify(message, category)
    set icons to {
        'message': '',
        'info': 'info_outline',
        'warning': 'warning',
        'error': 'error_outline',
        'success': 'check'
    }
    set titles to {
        'message': '',
        'info': 'Información',
        'warning': 'Advertencia',
        'error': 'Error',
        'success': 'Éxito'
    }

    if no category
        set category to 'message'
    end

    render #notification-template with (
        message: message,
        category: category,
        icons: icons,
        titles: titles
    )
    put it at the end of #message-container
end

on htmx:onLoadError from document
    or htmx:sendError from document
    notify("Ha ocurrido un error al conectar, por favor intentelo de nuevo", "error")
end

on htmx:responseError from document
    notify(`Ha ocurrido un error en el servidor, por favor intentelo de nuevo. Código: ${detail.xhr.status} ${detail.xhr.statusText}`, "error")
end

behavior CheckConfirmation(field, confirmation, name)
    on submit or htmx:validation:validate or input from confirmation
        if field.value is not equal to confirmation.value
            confirmation.setCustomValidity(`${name} no coincide con la confirmación de ${name}, por favor, introduzcalo de nuevo`)
        else
            confirmation.setCustomValidity('')
        end
        -- confirmation.reportValidity()
    end

end

behavior InstallButton
    init
        repeat forever
            log 'loop'
            if window.deferredPrompt exists then
                show
            else
                hide
            end

            wait 5s
        end
    end
    on click
        if window.deferredPrompt then
            call window.deferredPrompt.prompt()
        else
            alert("Estamos cargando los recursos para instalar la aplicación, prueba de nuevo en un momento")
        end
    end
end