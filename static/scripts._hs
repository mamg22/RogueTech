behavior SubmitFix(value)
    on mouseover or click
        set the value of #pagefix to value
    end
end

behavior DisableOnSubmit(table)
    on submit
        -- Async, because sync breaks form submission
        async do
            add .shine to table
            add @disabled to <fieldset, .pagination button/>
            wait for htmx:afterRequest
            remove @disabled from <fieldset:not([data-disabled]), .pagination button:not([data-disabled])/>
            settle
            remove .shine from table
        end
    end
    on htmx:historyRestore from window
        or popstate from window
        or htmx:beforeHistorySave from window
        remove @disabled from <fieldset:not([data-disabled]), .pagination button:not([data-disabled])/>
    end
end

behavior Notification
    on click
        remove me
    end
end

behavior Help
    init
        set element help_text to the innerHTML of first .help-text in me
    end
    on click
        alert(help_text)
    end
end

def notify(message, category)
    set icons to {
        'message': '',
        'info': 'info_outline',
        'warning': 'warning',
        'error': 'error_outline',
        'success': 'check'
    }
    set titles to {
        'message': '',
        'info': 'Información',
        'warning': 'Advertencia',
        'error': 'Error',
        'success': 'Éxito'
    }

    if no category
        set category to 'message'
    end

    render #notification-template with (
        message: message,
        category: category,
        icons: icons,
        titles: titles
    )
    put it at the end of #message-container
end

on htmx:onLoadError from document
    or htmx:sendError from document
    notify("Ha ocurrido un error al conectar, por favor intentelo de nuevo", "error")
end